/* regla CSS consta de 2 partes 
1) el selector

2) bloque de declaraciones: {
  atributo: valor;
  atributo-de-mas-dos-palabras: otro-valor;
} */
/*Son mala práctica porque son bloqueantes a la hora de que el navegador lee esta instrucción*/
/* @import url("otra-hoja.css"); */
h1 {
  color: orangered;
  background-color: black;
  text-align: center;
}

/* 
SELECTORES BÁSICOS:
1)Etiquetas- elementos HTML
2)Identificadores- atributo id- #
3)Clases- atributo class- . (una manera correcta)
*/
p {
  color: midnightblue;
}

/* Dar estilos con Id se considera un antipatrón*/
#parrafo-dos {
  background-color: skyblue;
}

/* Dar estilos con clases nos permite reutilizar nuestro código CSS */
.bg-skyblue {
  background-color: skyblue;
}

.bg-steelblue {
  background-color: steelblue;
}

.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.text-white {
  color: white;
}

/* SELECTORES AVANZADOS */
/* 1) NO olvidar los simbolos para especificar la funcion del atributo */
.direct-children > li {
  background-color: thistle;
}

.decendents-children b {
  background-color: thistle;
}

/* 1.1)  Los selectores de hermanos van aplicar a los elementos que son hermanos y que esten por debajo del elemento de referencia */
.general-siblings ~ li {
  background-color: thistle;
}

.adjacent-siblings + li {
  background-color: thistle;
}

/* 2) Selectores de atributos */

.attribute-select a[href] {
  color: orangered;
}

.attribute-select a[target="_blank"] {
  font-weight: bold;
}

/* 3) El comodín del * aplica si contiene la palabra en cuestión */
.attribute-select a[href*="rumerch"] {
  font-size: 24px;
}

/* 4) El comodín del ^ aplica el estilo si contiene el texto en cuestión al inicio */
.attribute-select a[href^="http://"]
{
  text-decoration: none;
}

/* 5) El comodín $ aplica el estilo si contiene el texto en cuestión al final */
.attribute-select a[href$=".com"] {
  background-color: black;
}

/* 6) El comodín ~ aplica el estilo si contiene el texto en cuestión en una lista separada por espacios*/
.attribute-select a[class~="uth"] {
  background-color: midnightblue;
}

/* 7) El comodín | aplica el estilo si contiene el texto en cuestión en una lista separada por espacios y que despues del texto en cuestión pude venir un guión medio*/
.attribute-select a[class|="menu"] {
  font-style: italic;
}

/* Selector universal */
* {
  font-family: sans-serif;
}

.selector-universal * {
  font-size: 24px;
}

/* PSEUDOCLASES- es una palabra clave que se añade a los selectores y que especifica un estado especial del elemento seleccionado */

.form-pseudoclases *:required {
  border-color: yellow;
}

.form-pseudoclases *:valid {
  border-color: green;
}

.form-pseudoclases *:invalid {
  border-color: red;
}

.form-pseudoclases *:focus {
  background-color: skyblue;
}

.form-pseudoclases *:disabled {
  background-color: pink;
}

.menu-pseudoclases a:visited {
  color: olive;
}

.menu-pseudoclases a:hover {
  color: orange;
}

.p-pseudoclases:hover {
  font-size: 20px;
}

#temario-css:target {
  background-color: lightgreen;
}

.lista-pseudoclases li:first-child {
  color: green;
}

.lista-pseudoclases li:last-child {
  color: violet;
}

.lista-pseudoclases li:nth-child(5) {
  color: navy;
}

.lista-pseudoclases li:nth-child(2n) {
  font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n + 1) {
  font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
  background-color: yellowgreen;
}

.lista-pseudoclases li:nth-child(odd) {
  background-color: orange;
}

.articulo-pseudoclases p:first-of-type {
  background-color: pink;
}

.articulo-pseudoclases p:last-of-type {
  background-color: violet;
}

.articulo-pseudoclases p:nth-of-type(2) {
  background-color: fuchsia;
}

.articulo-pseudoclases *:not(p) {
  background-color: beige;
}

/* PSEUDOELEMENTOS- Dan estilos a partes específicas de un elemento(etiqueta), se usa el :: para diferenciarlos de las pseudoclases */

.saga-geminis::before {
  content: "🤼";
}

.saga-geminis::after {
  content: "♊";
}

.saga-precio::before {
  content: "$";
  font-weight: bold;
}

.saga-precio::after {
  content: "USD";
  font-weight: bold;
}

.p-pseudoelementos::first-letter {
  font-weight: bold;
  font-size: 32px;
}

.p-pseudoelementos::first-line {
  color: coral;
}

.p-pseudoelementos::selection {
  color: greenyellow;
  background-color: black;
}

.input-pseudoelementos::placeholder {
  color: green;
}

/* Agrupar Selectores */
.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea {
  border-color: yellow;
  border-width: 2px;
  border-style: dotted;
  background-color: black;
  font-size: 20px;
  display: block;
  width: 300px;
}

/* El algoritmo de CSS: Es la forma en la que el navegador aplica los estilos al documento HTML. Es vital entender este concepto para que entiendas como se aplican y en algunas ocasiones se sobreescriben las reglas CSS 
1) La cáscada
2) La especifidad
3) La herencia 
 */

/* La CÁSCADA es el mecanismo para ir aplicando los estilos
Se toma en cuenta el orden: 
 1) -El origen del codigo
    -El use agent(los estilos por defecto del navegador)
    -Personalizaciones de usuario
    -Estilos del autor 
    2)La especificidad del selector
    3) Orden de aparición (en código)*/

/* La ESPECIFICIDAD es el peso(o puntaje) donde el que tiene mayor peso sobreescribe a los otros estilos. Se calcula de la siguiente forma:

Etiquetas y pseudoelementos--------------------0,0,0,1
Clases, selector de atributos y pseudoclases---0,0,1,0
identificadores--------------------------------0,1,0,0
Estilos en línea-------------------------------1,0,0,0
!important----------Rompe la especificidad*/

blockquote#cita-marco.cita-marco {
  background-color: lightskyblue;
}

blockquote {
  background-color: burlywood;
}

#cita-marco {
  background-color: lightgreen;
}

blockquote.cita-marco {
  background-color: tomato;
}

.cita-marco {
  background-color: cornflowerblue;
}

.cita-marco {
  background-color: mediumaquamarine !important;
}

blockquote#cita-marco {
  background-color: lightsalmon;
}

.cita-marco {
  background-color: moccasin !important;
  background-color: darkorange !important;
  font-size: 32px;
  border-style: dotted;
  border-color: red;
}

/* La HERENCIA es la capacidad de un selector de obtener (heredar) los valores de sus ancestros más cercanos, para aplicarla se usa el valor -->inherit si queremos evitarla podemos asignar otro valor o inicializar la propiedad en cuestión con el valor -->initial */

.cita-marco cite {
  background-color: pink;
  /* background-color: inherit; */
  font-size: 24px;
  font-size: initial;
  border-style: inherit;
  border-color: inherit;
}

/* Prefijos de los navegadores:
-webkit-user-select:none;
-moz-user-select:none;
-ms-user-select:none;
user-select:none;
*/
